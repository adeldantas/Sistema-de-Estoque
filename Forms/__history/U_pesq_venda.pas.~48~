unit U_pesq_venda;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, U_Form_pesquisa_padrao, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, frxClass, frxExportBaseDialog, frxExportPDF,
  frxDBSet, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask, Vcl.ExtCtrls, Vcl.DBCtrls, frCoreClasses;

type
  TFrm_pesq_venda = class(TFrm_pesquisa_padrao)
    Q_pesq_padraoID_VENDA: TIntegerField;
    Q_pesq_padraoID_CLIENTE: TIntegerField;
    Q_pesq_padraoNOME: TStringField;
    Q_pesq_padraoID_FORMA_PGTO: TIntegerField;
    Q_pesq_padraoDESCRICAO: TStringField;
    Q_pesq_padraoUSUARIO: TStringField;
    Q_pesq_padraoCADASTRO: TDateField;
    Q_pesq_padraoVALOR: TFMTBCDField;
    lb_soma_venda: TLabel;
    procedure cb_chave_pesquisaChange(Sender: TObject);
    procedure bt_PesquisaClick(Sender: TObject);
    procedure bt_TransferirClick(Sender: TObject);
    procedure bt_ImprimirClick(Sender: TObject);
    procedure soma_venda();
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_pesq_venda: TFrm_pesq_venda;

implementation

{$R *.dfm}

procedure TFrm_pesq_venda.bt_ImprimirClick(Sender: TObject);
var caminho: string;
begin
 //ABRE rELATORIO
 caminho:=ExtractFilepath(Application.ExeName);
 if Frm_pesq_VENDA.rel_pesq_padrao.LoadFromFile(caminho +
 'rel_pesq_venda.fr3') then
    begin
     rel_pesq_padrao.clear;//limpa relatorio
     Rel_pesq_padrao.LoadFromFile(extractfilepath(application.ExeName) +
     'rel_pesq_venda.fr3');
     rel_pesq_padrao.PrepareReport(true);
     rel_pesq_padrao.ShowPreparedReport;
    end
    else
    Messagedlg('Relatorio não encontrado',mtError,[mbOk],0);

end;

procedure TFrm_pesq_venda.bt_PesquisaClick(Sender: TObject);
begin

 Q_pesq_padrao.Close; // fecha
 Q_pesq_padrao.SQL.Add(''); // limpa
 Q_pesq_padrao.Params.Clear;  //limpamos os parametros
 Q_pesq_padrao.SQL.Clear;  // limPa o sql
 Q_pesq_padrao.SQL.Add('SELECT A.ID_VENDA,                         '
   +'A.ID_CLIENTE,                                                 '
   +'B.NOME,                                                       '
   +'A.ID_FORMA_PGTO,                                              '
   +'C.DESCRICAO,                                                  '
   +'A.USUARIO,                                                    '
   +'A.VALOR,                                                      '
   +'A.CADASTRO                                                    '
   +'FROM VENDA A                                                  '
   +'INNER JOIN CLIENTE B ON B.ID_CLIENTE = A.ID_CLIENTE           '
   +'left join FORMA_PGTO C ON C.ID_FORMA_PGTO = A.ID_FORMA_PGTO  ');

  //OPÇÕES DE PESQUISA
 case cb_chave_pesquisa.ItemIndex of
   0:begin// pesquisa por c
      Q_pesq_padrao.SQL.Add('WHERE A.ID_VENDA =:PID_VENDA'); // criamos o parametro
      Q_pesq_padrao.ParamByName('PID_VENDA').AsString:=ed_nome.Text; // aponta para o campo do parametro

     end;

    1:begin // pesquisa por nome
      Q_pesq_padrao.SQL.Add('WHERE A.USUARIO LIKE :PUSUARIO'); // criamos o parametro
      Q_pesq_padrao.ParamByName('PUSUARIO').AsString:= '%' +ed_nome.Text + '%'; // aponta para o campo do parametro

      end;

    2:begin
      Q_pesq_padrao.SQL.Add('WHERE A.ID_CLIENTE =:PID_CLIENTE'); // criamos o parametro
      Q_pesq_padrao.ParamByName('PID_CLIENTE').AsString:=ed_nome.Text;

     end;

    3:begin// pesquisa por dadta
       Q_pesq_padrao.SQL.Add('WHERE A.ID_FORMA_PGTO =:PID_FORMA_PGTO');
       Q_pesq_padrao.ParamByName('PID_FORMA_PGTO').AsString:=(ed_nome.Text);
     end;

    4:begin// pesquisa por dadta
       Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO =:PCADASTRO');
       Q_pesq_padrao.ParamByName('PCADASTRO').AsDate:=strTodate(mk_inicio.Text);
     end;


    5:begin// pesquisa por periodo
       Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO BETWEEN :PINICIO AND :PFIM');
       Q_pesq_padrao.ParamByName('PINICIO').AsDate:=strTodate(mk_inicio.Text);
       Q_pesq_padrao.ParamByName('PFIM').AsDate:=strTodate(mk_fim.Text);
      end;

    6:begin
         Q_pesq_padrao.SQL.Add('ORDER BY A.ID_VENDA');

      end;


 end;

// abre a query mostra o resultado
 Q_pesq_padrao.Open;

 // Chama a procedure soma_venda
    soma_venda;

 // se nada for encontrado mostra a msg
 if Q_pesq_padrao.IsEmpty then
    begin
      Messagedlg('Registro não encontrado!',MtInformation,[mbOk],0);
    end
    else
    // Move para o primeiro registro para garantir que o RecordCount seja preciso
    Q_pesq_padrao.First;
    // Mostra a quantidade de registros encontrados
   lb_Resultado.Caption := 'Total de Registros Localizados: ' +
    IntToStr(Q_pesq_padrao.RecordCount);
end;

procedure TFrm_pesq_venda.bt_TransferirClick(Sender: TObject);
begin
  inherited;
  if Q_pesq_padrao.RecordCount > 0 then
     begin
       codigo:=Q_pesq_padraoID_VENDA.AsInteger;
     end
     else
     abort;

end;

procedure TFrm_pesq_venda.cb_chave_pesquisaChange(Sender: TObject);
begin
  //inherited;
  case cb_chave_pesquisa.itemIndex of

  0:begin // pesquisa pelo codigo
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o código da compra';
      ed_nome.Clear;
    end;

    1:begin // pesquisa pelo usuario
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o nome do usuario';
      ed_nome.Clear;
    end;

    2:begin // pesquisa pelo codigo
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o código do cliente';
      ed_nome.Clear;
    end;

  3:begin // pesquisa pelo codigo
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o código da forma pgto';
      ed_nome.Clear;
    end;

    4:begin // pesquisa pela data
      ed_nome.Visible:=false;
      //ed_nome.SetFocus;
      mk_inicio.Visible:=true;      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=true;
      lb_fim.Visible:=false;
      lb_nome.Visible:=false;
      lb_inicio.Caption:='Digite a data';
      mk_inicio.SetFocus;
      ed_nome.Clear;
    end;


   5:begin // pesquisa pelo codigo
      ed_nome.Visible:=false;
      //ed_nome.SetFocus;
      mk_inicio.Visible:=true;
      mk_fim.Visible:=true;
      Lb_inicio.Visible:=true;
      lb_fim.Visible:=false;
      lb_nome.Visible:=false;
      lb_inicio.Caption:='Digite o o periodo';
      mk_inicio.SetFocus;
      ed_nome.Clear;
    end;

    6:begin // pesquisa pelo codigo
      ed_nome.Visible:=false;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Mostrando todos os registros';
      ed_nome.Clear;
    end;
  end;

end;

procedure TFrm_pesq_venda.soma_venda;
var soma: Currency;
begin
Soma:=0;
 // soma a quantidade de compras
 Q_pesq_padrao.First;
 while not Q_pesq_padrao.Eof do
   begin
     Soma:=soma + Q_pesq_padraoVALOR.AsCurrency;
     Q_pesq_padrao.Next;
   end;
   lb_soma_venda.Caption:=' Valores em Vendas:  ' +
   FormatFloat(' R$ ##,##0.00',(soma));
end;

end.
