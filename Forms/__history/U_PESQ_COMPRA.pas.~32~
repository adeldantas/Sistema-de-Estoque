unit U_PESQ_COMPRA;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, U_Form_pesquisa_padrao, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, frxClass, frxExportBaseDialog, frxExportPDF,
  frxDBSet, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask, Vcl.ExtCtrls, Vcl.DBCtrls;

type
  TFrm_pesq_compra = class(TFrm_pesquisa_padrao)
    Q_pesq_padraoID_COMPRA: TIntegerField;
    Q_pesq_padraoID_FORNECEDOR: TIntegerField;
    Q_pesq_padraoNOME: TStringField;
    Q_pesq_padraoID_FORMA_PGTO: TIntegerField;
    Q_pesq_padraoDESCRICAO: TStringField;
    Q_pesq_padraoUSUARIO: TStringField;
    Q_pesq_padraoCADASTRO: TDateField;
    Q_pesq_padraoVALOR: TFMTBCDField;
    lb_Valor_Compra: TLabel;
    procedure bt_PesquisaClick(Sender: TObject);
    procedure cb_chave_pesquisaChange(Sender: TObject);
    procedure bt_TransferirClick(Sender: TObject);
    procedure bt_ImprimirClick(Sender: TObject);
    procedure Soma_Compra();
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_pesq_compra: TFrm_pesq_compra;

implementation

{$R *.dfm}

procedure TFrm_pesq_compra.bt_ImprimirClick(Sender: TObject);
var caminho: string;
begin
 //ABRE rELATORIO
 caminho:=ExtractFilepath(Application.ExeName);
 if Frm_pesq_compra.rel_pesq_padrao.LoadFromFile(caminho +
 'rel_compra.fr3') then
    begin
     rel_pesq_padrao.clear;//limpa relatorio
     Rel_pesq_padrao.LoadFromFile(extractfilepath(application.ExeName) +
     'rel_compra.fr3');
     rel_pesq_padrao.PrepareReport(true);
     rel_pesq_padrao.ShowPreparedReport;
    end
    else
    Messagedlg('Relatorio não encontrado',mtError,[mbOk],0);

end;

procedure TFrm_pesq_compra.bt_PesquisaClick(Sender: TObject);
begin
 Q_pesq_padrao.Close; // fecha
 Q_pesq_padrao.SQL.Add(''); // limpa
 Q_pesq_padrao.Params.Clear;  //limpamos os parametros
 Q_pesq_padrao.SQL.Clear;  // limPa o sql
 Q_pesq_padrao.SQL.Add('SELECT A.ID_COMPRA, '
                       +'A.ID_FORNECEDOR,   '
                       +'B.NOME,    '
                       +'A.ID_FORMA_PGTO,   '
                       +'C.DESCRICAO,   '
                       +'A.USUARIO,         '
                       +'A.VALOR,           '
                       +'A.CADASTRO       '
                       +'FROM COMPRA A      '
                       +'INNER JOIN FORNECEDOR B ON B.ID_FORNECEDOR = A.ID_FORNECEDOR  '
                       +'INNER JOIN FORMA_PGTO C ON C.ID_FORMA_PGTO = A.ID_FORMA_PGTO  ');
   //OPÇÕES DE PESQUISA
 case cb_chave_pesquisa.ItemIndex of
   0:begin// pesquisa por c
      Q_pesq_padrao.SQL.Add('WHERE A.ID_COMPRA =:PID_COMPRA'); // criamos o parametro
      Q_pesq_padrao.ParamByName('PID_COMPRA').AsString:=ed_nome.Text; // aponta para o campo do parametro

     end;

    1:begin // pesquisa por nome
      Q_pesq_padrao.SQL.Add('WHERE A.USUARIO LIKE :PUSUARIO'); // criamos o parametro
      Q_pesq_padrao.ParamByName('PUSUARIO').AsString:= '%' +ed_nome.Text + '%'; // aponta para o campo do parametro

      end;

    2:begin
      Q_pesq_padrao.SQL.Add('WHERE A.ID_FORNECEDOR =:PID_FORNECEDOR'); // criamos o parametro
      Q_pesq_padrao.ParamByName('PID_FORNECEDOR').AsString:=ed_nome.Text;

     end;

    3:begin// pesquisa por dadta
       Q_pesq_padrao.SQL.Add('WHERE A.ID_FORMA_PGTO =:PID_FORMA_PGTO');
       Q_pesq_padrao.ParamByName('PID_FORMA_PGTO').AsString:=(ed_nome.Text);
     end;

    4:begin// pesquisa por dadta
       Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO =:PCADASTRO');
       Q_pesq_padrao.ParamByName('PCADASTRO').AsDate:=strTodate(mk_inicio.Text);
     end;


    5:begin// pesquisa por periodo
       Q_pesq_padrao.SQL.Add('WHERE A.CADASTRO BETWEEN :PINICIO AND :PFIM');
       Q_pesq_padrao.ParamByName('PINICIO').AsDate:=strTodate(mk_inicio.Text);
       Q_pesq_padrao.ParamByName('PFIM').AsDate:=strTodate(mk_fim.Text);
      end;

    6:begin
         Q_pesq_padrao.SQL.Add('ORDER BY A.id_compra');
      end;
 end;

// abre a query mostra o resultado
 Q_pesq_padrao.Open;

 // Mostra a quantidade de registros encontrados
    lb_Resultado.Caption:=' Total de Registros Localizados:   ' +
    IntTostr(Q_pesq_padrao.recordcount);
   // chama a procedure soma_compra
    Soma_Compra;

 // se nada for encontrado mostra a msg
 if Q_pesq_padrao.IsEmpty then
    begin
      Messagedlg('Registro não encontrado!',MtInformation,[mbOk],0);
    end
    else
    abort;
end;

procedure TFrm_pesq_compra.bt_TransferirClick(Sender: TObject);
begin
  inherited;
  if Q_pesq_padrao.RecordCount > 0 then
     begin
       codigo:=Q_pesq_padraoID_COMPRA.AsInteger;
     end
     else
     abort;
end;

procedure TFrm_pesq_compra.cb_chave_pesquisaChange(Sender: TObject);
begin
  //inherited;
  case cb_chave_pesquisa.itemIndex of

  0:begin // pesquisa pelo codigo
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o código da compra';
      ed_nome.Clear;
    end;

    1:begin // pesquisa pelo usuario
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o nome do usuario';
      ed_nome.Clear;
    end;

    2:begin // pesquisa pelo codigo
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o código do fornecedor';
      ed_nome.Clear;
    end;

  3:begin // pesquisa pelo codigo
      ed_nome.Visible:=true;
      ed_nome.SetFocus;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      lb_nome.Visible:=true;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Digite o código da forma pgto';
      ed_nome.Clear;
    end;

    4:begin // pesquisa pela data
      ed_nome.Visible:=false;
      //ed_nome.SetFocus;
      mk_inicio.Visible:=true;
      mk_inicio.SetFocus;
      mk_fim.Visible:=false;
      lb_nome.Visible:=false;
      Lb_inicio.Visible:=true;
      lb_fim.Visible:=false;
      //lb_nome.Caption:='Digite a data';
      lb_inicio.Caption:='Digite a data';
      ed_nome.Clear;
    end;


   5:begin // pesquisa pelo codigo
      ed_nome.Visible:=false;
      lb_nome.Visible:=false;
      //ed_nome.SetFocus;
      mk_inicio.Visible:=true;
      mk_fim.Visible:=true;
      Lb_inicio.Visible:=true;
      lb_fim.Visible:=false;
      lb_inicio.Caption:='Digite o o periodo';
//      ed_nome.Clear;
    end;

    6:begin // pesquisa pelo codigo
      ed_nome.Visible:=false;
      mk_inicio.Visible:=false;
      mk_fim.Visible:=false;
      Lb_inicio.Visible:=false;
      lb_fim.Visible:=false;
      lb_nome.Caption:='Mostrando todos os registros';
      ed_nome.Clear;
    end;
  end;
end;

procedure TFrm_pesq_compra.Soma_Compra;
var soma: Currency;
begin
Soma:=0;
 // soma a quantidade de compras
 Q_pesq_padrao.First;
 while not Q_pesq_padrao.Eof do
   begin
     Soma:=soma + Q_pesq_padraoVALOR.AsCurrency;
     Q_pesq_padrao.Next;
   end;
   lb_valor_compra.Caption:=' Valores em Compras:  ' +
   FormatFloat(' R$ ##,##0.00',(soma));
end;

end.
