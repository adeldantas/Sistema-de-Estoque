unit U_pesq_geral_mes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask,
  Vcl.ExtCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, frxClass, frxDBSet, frxExportBaseDialog, frxExportPDF,
  Vcl.Grids, Vcl.DBGrids;

type
  TFrm_Pesq_geral_Mes = class(TForm)
    Panel1: TPanel;
    lb_inicio: TLabel;
    lb_fim: TLabel;
    mk_inicio: TMaskEdit;
    mk_fim: TMaskEdit;
    bt_Pesquisa: TBitBtn;
    bt_Imprimir: TBitBtn;
    RG_OPCAO: TRadioGroup;
    Q_compra: TFDQuery;
    Q_venda: TFDQuery;
    Q_conta_pagar: TFDQuery;
    Q_conta_receber: TFDQuery;
    Q_contas_pagar_a_pagar: TFDQuery;
    Q_contas_Receber_a_receber: TFDQuery;
    ds_compra: TDataSource;
    ds_venda: TDataSource;
    ds_conta_pagar: TDataSource;
    ds_conta_receber: TDataSource;
    ds_contas_pagar_a_pagar: TDataSource;
    ds_contas_Receber_a_receber: TDataSource;
    Relatorio_Geral: TfrxReport;
    frx_Compra: TfrxDBDataset;
    frx_Venda: TfrxDBDataset;
    frx_Conta_pagar: TfrxDBDataset;
    frx_Conta_Receber: TfrxDBDataset;
    frx_Contas_Pagar_a_pagar: TfrxDBDataset;
    frx_Contas_Receber_a_receber: TfrxDBDataset;
    frxPDFExport1: TfrxPDFExport;
    bt_Sair: TBitBtn;
    Q_compraMES: TSmallintField;
    Q_compraANO: TSmallintField;
    Q_compraVALOR_COMPRA: TFMTBCDField;
    Q_vendaMES: TSmallintField;
    Q_vendaANO: TSmallintField;
    Q_vendaVALOR_VENDA: TFMTBCDField;
    Q_conta_pagarMES: TSmallintField;
    Q_conta_pagarANO: TSmallintField;
    Q_conta_pagarTOTAL_PAGO: TFMTBCDField;
    Q_conta_receberMES: TSmallintField;
    Q_conta_receberANO: TSmallintField;
    Q_conta_receberTOTAL_RECEBIDO: TFMTBCDField;
    Q_contas_pagar_a_pagarANO: TSmallintField;
    Q_contas_pagar_a_pagarVALOR_A_PAGAR: TFMTBCDField;
    Q_contas_Receber_a_receberMES: TSmallintField;
    Q_contas_Receber_a_receberANO: TSmallintField;
    Q_contas_Receber_a_receberVALOR_A_RECEBER: TFMTBCDField;
    Q_contas_pagar_a_pagarMES: TSmallintField;
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure bt_SairClick(Sender: TObject);
    procedure bt_PesquisaClick(Sender: TObject);
    procedure bt_ImprimirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_Pesq_geral_Mes: TFrm_Pesq_geral_Mes;

implementation

{$R *.dfm}

uses U_DM;

procedure TFrm_Pesq_geral_Mes.bt_ImprimirClick(Sender: TObject);
Var caminho:String;
begin
 case rg_opcao.ItemIndex of
    0:begin
 //ABRE rELATORIO
       caminho:=ExtractFilepath(Application.ExeName);
       if Frm_Pesq_geral_Mes.relatorio_geral.LoadFromFile(caminho +'Rel_compra_venda_mes.fr3') then
         begin
           relatorio_geral.clear;//limpa relatorio
           relatorio_geral.LoadFromFile(extractfilepath(application.ExeName) +
           'Rel_compra_venda_mes.fr3');
           Relatorio_geral.Variables['data_inicial']:=QuotedStr(mk_inicio.Text);
           Relatorio_geral.Variables['data_final']:=QuotedStr(mk_fim.Text);
           Relatorio_geral.Variables['usuario']:=QuotedStr(dm.usuario);
           relatorio_geral.PrepareReport(true);
          relatorio_geral.ShowPreparedReport;
        end
       else
        Messagedlg('Relatorio não encontrado',mtError,[mbOk],0);
    end;

    1:begin

 //ABRE rELATORIO
       caminho:=ExtractFilepath(Application.ExeName);
       if Frm_Pesq_geral_Mes.relatorio_geral.LoadFromFile(caminho +
       'Rel_Contas_pagas_recebidas_mes.fr3') then
         begin
           relatorio_geral.clear;//limpa relatorio
           relatorio_geral.LoadFromFile(extractfilepath(application.ExeName) +
           'Rel_Contas_pagas_recebidas_mes.fr3');
           Relatorio_geral.Variables['data_inicial']:=QuotedStr(mk_inicio.Text);
           Relatorio_geral.Variables['data_final']:=QuotedStr(mk_fim.Text);
           Relatorio_geral.Variables['usuario']:=QuotedStr(dm.usuario);
           relatorio_geral.PrepareReport(true);
          relatorio_geral.ShowPreparedReport;
        end
       else
        Messagedlg('Relatorio não encontrado',mtError,[mbOk],0);
    end;
    end;

end;

procedure TFrm_Pesq_geral_Mes.bt_PesquisaClick(Sender: TObject);
begin
 case rg_opcao.ItemIndex of
    0:begin  // COMPRAS E VENAS POR MES
        Q_compra.Close; // fecha
        Q_compra.SQL.Add(''); // limpa
        Q_compra.Params.Clear;  //limpamos os parametros
        Q_compra.SQL.Clear;  // limPa o sql
        Q_compra.SQL.Add('select extract(MONTH FROM A.CADASTRO) AS MES,'
                        +'extract(YEAR FROM A.CADASTRO) AS ANO,        '
                        +'SUM(A.VALOR) AS VALOR_COMPRA                 '
                        +'FROM COMPRA A');
        Q_compra.SQL.Add('WHERE A.CADASTRO between :pdata_ini AND :pdata_fim');
        Q_compra.ParamByName('pdata_ini').AsDate:=strtodate(mk_inicio.Text);
        Q_compra.ParamByName('pdata_fim').AsDate:=strtodate(mk_fim.Text);
        Q_compra.SQL.Add('group BY extract(MONTH FROM A.CADASTRO),  extract(YEAR FROM A.CADASTRO)');
        Q_compra.SQL.Add('ORDER BY  extract(MONTH FROM A.CADASTRO)');
        Q_compra.Open;

        Q_venda.Close; // fecha
        Q_venda.SQL.Add(''); // limpa
        Q_venda.Params.Clear;  //limpamos os parametros
        Q_venda.SQL.Clear;  // limPa o sql
        Q_venda.SQL.Add('select extract(MONTH FROM A.CADASTRO) AS MES,'
                        +'extract(YEAR FROM A.CADASTRO) AS ANO,        '
                        +'SUM(A.VALOR) AS VALOR_VENDA                 '
                        +'FROM VENDA A');
        Q_venda.SQL.Add('WHERE A.CADASTRO between :pdata_ini AND :pdata_fim');
        Q_venda.ParamByName('pdata_ini').AsDate:=strtodate(mk_inicio.Text);
        Q_venda.ParamByName('pdata_fim').AsDate:=strtodate(mk_fim.Text);
        Q_venda.SQL.Add('group BY extract(MONTH FROM A.CADASTRO),  extract(YEAR FROM A.CADASTRO)');
        Q_venda.SQL.Add('ORDER BY  extract(MONTH FROM A.CADASTRO)');
        Q_venda.Open;
        bt_imprimir.Click;

      end;

      1:begin // TOTAL PAGO E RECEBIDO POR MES
        Q_conta_pagar.Close; // fecha
        Q_conta_pagar.SQL.Add(''); // limpa
        Q_conta_pagar.Params.Clear;  //limpamos os parametros
       Q_conta_pagar.SQL.Clear;  // limPa o sql
        Q_conta_pagar.SQL.Add('select extract(MONTH FROM A.DT_PAGAMENTO) AS MES,'
                        +'extract(YEAR FROM A.DT_PAGAMENTO) AS ANO,        '
                        +'SUM(A.TOTAL_PAGAR) AS TOTAL_PAGO                 '
                        +'FROM CONTAS_PAGAR A');
        Q_conta_pagar.SQL.Add('WHERE A.DT_PAGAMENTO between :pdata_ini AND :pdata_fim');
        Q_conta_pagar.ParamByName('pdata_ini').AsDate:=strtodate(mk_inicio.Text);
        Q_conta_pagar.ParamByName('pdata_fim').AsDate:=strtodate(mk_fim.Text);
        Q_conta_pagar.SQL.Add('group BY extract(MONTH FROM A.DT_PAGAMENTO),  extract(YEAR FROM A.DT_PAGAMENTO)');
        Q_conta_pagar.SQL.Add('ORDER BY  extract(MONTH FROM A.DT_PAGAMENTO)');
        Q_conta_pagar.Open;

        Q_conta_Receber.Close; // fecha
        Q_conta_Receber.SQL.Add(''); // limpa
        Q_conta_Receber.Params.Clear;  //limpamos os parametros
        Q_conta_Receber.SQL.Clear;  // limPa o sql
        Q_conta_Receber.SQL.Add('select extract(MONTH FROM A.DT_PAGAMENTO) AS MES,'
                        +'extract(YEAR FROM A.DT_PAGAMENTO) AS ANO,        '
                        +'SUM(A.TOTAL_PAGAR) AS TOTAL_RECEBIDO                 '
                        +'FROM CONTAS_RECEBER A');
        Q_conta_Receber.SQL.Add('WHERE A.DT_PAGAMENTO between :pdata_ini AND :pdata_fim');
        Q_conta_Receber.ParamByName('pdata_ini').AsDate:=strtodate(mk_inicio.Text);
        Q_conta_Receber.ParamByName('pdata_fim').AsDate:=strtodate(mk_fim.Text);
        Q_conta_Receber.SQL.Add('group BY extract(MONTH FROM A.DT_PAGAMENTO),  extract(YEAR FROM A.DT_PAGAMENTO)');
        Q_conta_Receber.SQL.Add('ORDER BY  extract(MONTH FROM A.DT_PAGAMENTO)');
        Q_conta_Receber.Open;

      end;

      2:begin // TOTAL A PAGAR E A RECEBER POR MES
        Q_contas_pagar_a_pagar.Close; // fecha
        Q_contas_pagar_a_pagar.SQL.Add(''); // limpa
        Q_contas_pagar_a_pagar.Params.Clear;  //limpamos os parametros
        Q_contas_pagar_a_pagar.SQL.Clear;  // limPa o sql
        Q_contas_pagar_a_pagar.SQL.Add('select extract(MONTH FROM A.DT_VENCIMENTO) AS MES, '
                        +'extract(YEAR FROM A.DT_VENCIMENTO) AS ANO,                         '
                        +'SUM(A.VALOR_PARCELA) AS VALOR_A_PAGAR                              '
                        +'FROM CONTAS_PAGAR A                                                ');
        Q_contas_pagar_a_pagar.SQL.Add('WHERE A.DT_VENCIMENTO between :pdata_ini AND :pdata_fim ');
        Q_contas_pagar_a_pagar.SQL.Add('AND A.STATUS = ''EM ABERTO''');
        Q_contas_pagar_a_pagar.ParamByName('pdata_ini').AsDate:=strtodate(mk_inicio.Text);
        Q_contas_pagar_a_pagar.ParamByName('pdata_fim').AsDate:=strtodate(mk_fim.Text);
        Q_contas_pagar_a_pagar.SQL.Add('group BY extract(MONTH FROM A.DT_VENCIMENTO),  extract(YEAR FROM A.DT_VENCIMENTO)');
        Q_contas_pagar_a_pagar.SQL.Add('ORDER BY  extract(MONTH FROM A.DT_VENCIMENTO)');
        Q_contas_pagar_a_pagar.Open;

        Q_contas_Receber_a_Receber.Close; // fecha
        Q_contas_Receber_a_Receber.SQL.Add(''); // limpa
        Q_contas_Receber_a_Receber.Params.Clear;  //limpamos os parametros
        Q_contas_Receber_a_Receber.SQL.Clear;  // limPa o sql
        Q_contas_Receber_a_Receber.SQL.Add('select extract(MONTH FROM A.DT_VENCIMENTO) AS MES, '
                        +'extract(YEAR FROM A.DT_VENCIMENTO) AS ANO,             '
                        +'SUM(A.VALOR_PARCELA) AS VALOR_A_RECEBER                 '
                        +'FROM CONTAS_RECEBER A ');
        Q_contas_Receber_a_Receber.SQL.Add('WHERE A.DT_VENCIMENTO between :pdata_ini AND :pdata_fim ');
        Q_contas_Receber_a_Receber.SQL.Add('AND A.STATUS = ''EM ABERTO''');
        Q_contas_Receber_a_Receber.ParamByName('pdata_ini').AsDate:=strtodate(mk_inicio.Text);
        Q_contas_Receber_a_Receber.ParamByName('pdata_fim').AsDate:=strtodate(mk_fim.Text);
        Q_contas_Receber_a_Receber.SQL.Add('group BY extract(MONTH FROM A.DT_VENCIMENTO),  extract(YEAR FROM A.DT_VENCIMENTO)');
        Q_contas_Receber_a_Receber.SQL.Add('ORDER BY  extract(MONTH FROM A.DT_VENCIMENTO)');
        Q_contas_Receber_a_Receber.Open;

      end;
 end;

end;

procedure TFrm_Pesq_geral_Mes.bt_SairClick(Sender: TObject);
begin
 close;
end;

procedure TFrm_Pesq_geral_Mes.FormKeyPress(Sender: TObject; var Key: Char);
begin
 if Key=#13 then
   begin
     Key:=#0;
     Perform(wm_nextDlgCtl,0,0);
   end;
end;

end.
